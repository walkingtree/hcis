function getPatientRecord(){
	var patientRecord = Ext.data.Record.create([
	
	//Personal Details
	
	{ name: 'personalDetailsRegistrationNumber' , mapping: 'personalDetailsBM.registrationNumber',type:'int' } ,				
	{ name: 'personalDetailsFirstName'  , mapping: 'personalDetailsBM.firstName',type:'string' },				
	{ name: 'personalDetailsMiddleName' , mapping: 'personalDetailsBM.middleName',type:'string' } ,				
	{ name: 'personalDetailsLastName' , mapping: 'personalDetailsBM.lastName',type:'string'   } ,				
	{ name: 'personalDetailsRegistrationDate' , mapping: 'personalDetailsBM.registrationDate',type:'date' }	,			
	{ name: 'personalDetailsDateOfBirth' , mapping: 'personalDetailsBM.dateOfBirth',type:'date'  },	
	{ name: 'personalDetailsTitle', mapping: 'personalDetailsBM.title.description',type:'string'  },
	{ name: 'personalDetailsRegistrationType' , mapping: 'personalDetailsBM.registrationType.description',type:'string'  } , 
	{ name: 'personalDetailsRegistrationStatus', mapping: 'personalDetailsBM.registrationStatus.description',type:'string' }  ,
	{ name: 'personalDetailsPatientRating', mapping: 'personalDetailsBM.patientRating.description', type:'string' } ,	
	{ name: 'personalDetailsPatientCategory', mapping: 'personalDetailsBM.patientCategory.description', type:'string' } ,	
	{ name: 'personalDetailsGender', mapping: 'personalDetailsBM.gender.description', type:'string' } ,
	{ name: 'personalDetailsTitleCode', mapping: 'personalDetailsBM.title.code',type:'string'  },
	{ name: 'personalDetailsRegistrationTypeCode' , mapping: 'personalDetailsBM.registrationType.code',type:'string'  } , 
	{ name: 'personalDetailsRegistrationStatusCode', mapping: 'personalDetailsBM.registrationStatus.code',type:'string' }  ,
	{ name: 'personalDetailsPatientRatingCode', mapping: 'personalDetailsBM.patientRating.code', type:'string' } ,	
	{ name: 'personalDetailsPatientCategoryCode', mapping: 'personalDetailsBM.patientCategory.code', type:'string' } ,	
	{ name: 'personalDetailsGenderCode', mapping: 'personalDetailsBM.gender.code', type:'string' } ,
	
	//Personal Additional Details
	
	{ name: 'personalDetailsAdditionalRegistrationNumber'  , mapping: 'personalDetailsAdditionalBM.registrationNumber',type:'string' },	
	{ name: 'personalDetailsAdditionalHeight'  , mapping: 'personalDetailsAdditionalBM.height',type:'string' },				
	{ name: 'personalDetailsAdditionalWeight' , mapping: 'personalDetailsAdditionalBM.weight',type:'string' } ,				
	{ name: 'personalDetailsAdditionalIdNumber' , mapping: 'personalDetailsAdditionalBM.idNumber',type:'string'   } ,				
	{ name: 'personalDetailsAdditionalBloodDonorId' , mapping: 'personalDetailsAdditionalBM.bloodDonorId',type:'string' }	,			
	{ name: 'personalDetailsAdditionalPatientOccupation' , mapping: 'personalDetailsAdditionalBM.patientOccupation',type:'string'  },				
	{ name: 'personalDetailsAdditionalMonthlyIncome', mapping: 'personalDetailsAdditionalBM.monthlyIncome',type:'string'  },
	{ name: 'personalDetailsAdditionalFatherHusband' , mapping: 'personalDetailsAdditionalBM.fatherHusband',type:'string'  } , 
	{ name: 'personalDetailsAdditionalVisaNumber', mapping: 'personalDetailsAdditionalBM.visaNumber',type:'string' }  ,
	{ name: 'personalDetailsAdditionalIdValidUpto', mapping: 'personalDetailsAdditionalBM.idValidUpto', type:'date' } ,	
	{ name: 'personalDetailsAdditionalVisaValidUpto', mapping: 'personalDetailsAdditionalBM.visaValidUpto', type:'date' } ,	
	{ name: 'personalDetailsAdditionalReligion', mapping: 'personalDetailsAdditionalBM.religion.description', type:'string' } 	,
	{ name: 'personalDetailsAdditionalMaritalStatus' , mapping: 'personalDetailsAdditionalBM.maritalStatus.description',type:'string' } ,				
	{ name: 'personalDetailsAdditionalIdProof'  , mapping: 'personalDetailsAdditionalBM.idProof.description',type:'string' },				
	{ name: 'personalDetailsAdditionalBloodGroup' , mapping: 'personalDetailsAdditionalBM.bloodGroup.description',type:'string' } ,				
	{ name: 'personalDetailsAdditionalMotherTongue' , mapping: 'personalDetailsAdditionalBM.motherTongue.description',type:'string'   } ,	
	{ name: 'personalDetailsAdditionalNationality' , mapping: 'personalDetailsAdditionalBM.nationality.description',type:'string'   } ,				
	{ name: 'personalDetailsAdditionalReferredBy' , mapping: 'personalDetailsAdditionalBM.referredBy.description',type:'string' }	,
	{ name: 'personalDetailsAdditionalReligionCode', mapping: 'personalDetailsAdditionalBM.religion.code', type:'string' } 	,
	{ name: 'personalDetailsAdditionalMaritalStatusCode' , mapping: 'personalDetailsAdditionalBM.maritalStatus.code',type:'string' } ,				
	{ name: 'personalDetailsAdditionalIdProofCode'  , mapping: 'personalDetailsAdditionalBM.idProof.code',type:'string' },				
	{ name: 'personalDetailsAdditionalBloodGroupCode' , mapping: 'personalDetailsAdditionalBM.bloodGroup.code',type:'string' } ,				
	{ name: 'personalDetailsAdditionalMotherTongueCode' , mapping: 'personalDetailsAdditionalBM.motherTongue.code',type:'string'   } ,	
	{ name: 'personalDetailsAdditionalNationalityCode' , mapping: 'personalDetailsAdditionalBM.nationality.code',type:'string'   } ,				
	{ name: 'personalDetailsAdditionalReferredByCode' , mapping: 'personalDetailsAdditionalBM.referredBy.code',type:'string' }	,			
	{ name: 'personalDetailsAdditionalHeightIndCode' , mapping: 'personalDetailsAdditionalBM.heightIndicator.code',type:'string' }	,
	{ name: 'personalDetailsAdditionalHeightIndDescription' , mapping: 'personalDetailsAdditionalBM.heightIndicator.description',type:'string' }	,
	{ name: 'personalDetailsAdditionalWeightIndCode' , mapping: 'personalDetailsAdditionalBM.weightIndicator.code',type:'string' }	,
	{ name: 'personalDetailsAdditionalWeightIndDescription' , mapping: 'personalDetailsAdditionalBM.weightIndicator.description',type:'string' }	,
	
	{ name: 'emergencyPrimaryContactDetailsCode'  , mapping: 'emergencyPrimaryBM.contactDetailsCode',type:'int' },				
	{ name: 'emergencyPrimaryPersonelId' , mapping: 'emergencyPrimaryBM.personelId',type:'int' } ,				
	{ name: 'emergencyPrimaryHouseNumber' , mapping: 'emergencyPrimaryBM.houseNumber',type:'string'   } ,				
	{ name: 'emergencyPrimaryStreet' , mapping: 'emergencyPrimaryBM.street',type:'string' }	,			
	{ name: 'emergencyPrimaryCity' , mapping: 'emergencyPrimaryBM.city',type:'string'  },				
	{ name: 'emergencyPrimaryPincode', mapping: 'emergencyPrimaryBM.pincode',type:'string'  },
	{ name: 'emergencyPrimaryPhoneNumber' , mapping: 'emergencyPrimaryBM.phoneNumber',type:'string'  } , 
	{ name: 'emergencyPrimaryMobileNumber', mapping: 'emergencyPrimaryBM.mobileNumber',type:'string' }  ,
	{ name: 'emergencyPrimaryFaxNumber', mapping: 'emergencyPrimaryBM.faxNumber', type:'string' } ,	
	{ name: 'emergencyPrimaryEmail', mapping: 'emergencyPrimaryBM.email', type:'string' } ,	
	{ name: 'emergencyPrimaryStayDuration', mapping: 'emergencyPrimaryBM.stayDuration', type:'string' } 	,
	{ name: 'emergencyPrimaryFirstName' , mapping: 'emergencyPrimaryBM.firstName',type:'string' } ,				
	{ name: 'emergencyPrimaryMiddleName'  , mapping: 'emergencyPrimaryBM.middleName',type:'string' },				
	{ name: 'emergencyPrimaryLastName' , mapping: 'emergencyPrimaryBM.lastName',type:'string' } ,				
	{ name: 'emergencyPrimaryForEntity' , mapping: 'emergencyPrimaryBM.forEntity.description',type:'string'   } ,				
	{ name: 'emergencyPrimarySalutation' , mapping: 'emergencyPrimaryBM.salutation.description',type:'string' }	,
	{ name: 'emergencyPrimaryCountry'  , mapping: 'emergencyPrimaryBM.country.description',type:'string' },				
	{ name: 'emergencyPrimaryState' , mapping: 'emergencyPrimaryBM.state.description',type:'string' } ,				
	{ name: 'emergencyPrimaryGender' , mapping: 'emergencyPrimaryBM.gender.description',type:'string'   } ,
	{ name: 'emergencyPrimaryContactType' , mapping: 'emergencyPrimaryBM.contactType.description',type:'string'   } ,	
	{ name: 'emergencyPrimaryRelationCode' , mapping: 'emergencyPrimaryBM.relationCode.description',type:'string'   } ,
	{ name: 'emergencyPrimaryForEntityCode' , mapping: 'emergencyPrimaryBM.forEntity.code',type:'string'   } ,				
	{ name: 'emergencyPrimarySalutationCode' , mapping: 'emergencyPrimaryBM.salutation.code',type:'string' }	,
	{ name: 'emergencyPrimaryCountryCode'  , mapping: 'emergencyPrimaryBM.country.code',type:'string' },				
	{ name: 'emergencyPrimaryStateCode' , mapping: 'emergencyPrimaryBM.state.code',type:'string' } ,				
	{ name: 'emergencyPrimaryGenderCode' , mapping: 'emergencyPrimaryBM.gender.code',type:'string'   } ,
	{ name: 'emergencyPrimaryContactTypeCode' , mapping: 'emergencyPrimaryBM.contactType.code',type:'string'   } ,	
	{ name: 'emergencyPrimaryRelationCodeCode' , mapping: 'emergencyPrimaryBM.relationCode.code',type:'string'   } ,
	
	//Emergency Secondary Contact details
	
	{ name: 'emergencySecondaryContactDetailsCode'  , mapping: 'emergencySecondaryBM.contactDetailsCode',type:'int' },				
	{ name: 'emergencySecondaryPersonelId' , mapping: 'emergencySecondaryBM.personelId',type:'int' } ,				
	{ name: 'emergencySecondaryHouseNumber' , mapping: 'emergencySecondaryBM.houseNumber',type:'string'   } ,				
	{ name: 'emergencySecondaryStreet' , mapping: 'emergencySecondaryBM.street',type:'string' }	,			
	{ name: 'emergencySecondaryCity' , mapping: 'emergencySecondaryBM.city',type:'string'  },				
	{ name: 'emergencySecondaryPincode', mapping: 'emergencySecondaryBM.pincode',type:'string'  },
	{ name: 'emergencySecondaryPhoneNumber' , mapping: 'emergencySecondaryBM.phoneNumber',type:'string'  } , 
	{ name: 'emergencySecondaryMobileNumber', mapping: 'emergencySecondaryBM.mobileNumber',type:'string' }  ,
	{ name: 'emergencySecondaryFaxNumber', mapping: 'emergencySecondaryBM.faxNumber', type:'string' } ,	
	{ name: 'emergencySecondaryEmail', mapping: 'emergencySecondaryBM.email', type:'string' } ,	
	{ name: 'emergencySecondaryStayDuration', mapping: 'emergencySecondaryBM.stayDuration', type:'string' } 	,
	{ name: 'emergencySecondaryFirstName' , mapping: 'emergencySecondaryBM.firstName',type:'string' } ,				
	{ name: 'emergencySecondaryMiddleName'  , mapping: 'emergencySecondaryBM.middleName',type:'string' },				
	{ name: 'emergencySecondaryLastName' , mapping: 'emergencySecondaryBM.lastName',type:'string' } ,				
	{ name: 'emergencySecondaryForEntity' , mapping: 'emergencySecondaryBM.forEntity.description',type:'string'   } ,				
	{ name: 'emergencySecondarySalutation' , mapping: 'emergencySecondaryBM.salutation.description',type:'string' }	,
	{ name: 'emergencySecondaryCountry'  , mapping: 'emergencySecondaryBM.country.description',type:'string' },				
	{ name: 'emergencySecondaryState' , mapping: 'emergencySecondaryBM.state.description',type:'string' } ,				
	{ name: 'emergencySecondaryGender' , mapping: 'emergencySecondaryBM.gender.description',type:'string'   } ,
	{ name: 'emergencySecondaryContactType' , mapping: 'emergencySecondaryBM.contactType.description',type:'string'   } ,	
	{ name: 'emergencySecondaryRelationCode' , mapping: 'emergencySecondaryBM.relationCode.description',type:'string'   } ,
	{ name: 'emergencySecondaryForEntityCode' , mapping: 'emergencySecondaryBM.forEntity.code',type:'string'   } ,				
	{ name: 'emergencySecondarySalutationCode' , mapping: 'emergencySecondaryBM.salutation.code',type:'string' }	,
	{ name: 'emergencySecondaryCountryCode'  , mapping: 'emergencySecondaryBM.country.code',type:'string' },				
	{ name: 'emergencySecondaryStateCode' , mapping: 'emergencySecondaryBM.state.code',type:'string' } ,				
	{ name: 'emergencySecondaryGenderCode' , mapping: 'emergencySecondaryBM.gender.code',type:'string'   } ,
	{ name: 'emergencySecondaryContactTypeCode' , mapping: 'emergencySecondaryBM.contactType.code',type:'string'   } ,	
	{ name: 'emergencySecondaryRelationCodeCode' , mapping: 'emergencySecondaryBM.relationCode.code',type:'string'   } ,
	
	//Current Contact details
	
	{ name: 'currentContactDetailsCode'  , mapping: 'currentBM.contactDetailsCode',type:'int' },				
	{ name: 'currentPersonelId' , mapping: 'currentBM.personelId',type:'int' } ,				
	{ name: 'currentHouseNumber' , mapping: 'currentBM.houseNumber',type:'string'   } ,				
	{ name: 'currentStreet' , mapping: 'currentBM.street',type:'string' }	,			
	{ name: 'currentCity' , mapping: 'currentBM.city',type:'string'  },				
	{ name: 'currentPincode', mapping: 'currentBM.pincode',type:'string'  },
	{ name: 'currentPhoneNumber' , mapping: 'currentBM.phoneNumber',type:'string'  } , 
	{ name: 'currentMobileNumber', mapping: 'currentBM.mobileNumber',type:'string' }  ,
	{ name: 'currentFaxNumber', mapping: 'currentBM.faxNumber', type:'string' } ,	
	{ name: 'currentEmail', mapping: 'currentBM.email', type:'string' } ,	
	{ name: 'currentStayDuration', mapping: 'currentBM.stayDuration', type:'string' } 	,
	{ name: 'currentFirstName' , mapping: 'currentBM.firstName',type:'string' } ,				
	{ name: 'currentMiddleName'  , mapping: 'currentBM.middleName',type:'string' },				
	{ name: 'currentLastName' , mapping: 'currentBM.lastName',type:'string' } ,				
	{ name: 'currentForEntity' , mapping: 'currentBM.forEntity.description',type:'string'   } ,				
	{ name: 'currentSalutation' , mapping: 'currentBM.salutation.description',type:'string' }	,
	{ name: 'currentCountry'  , mapping: 'currentBM.country.description',type:'string' },				
	{ name: 'currentState' , mapping: 'currentBM.state.description',type:'string' } ,				
	{ name: 'currentGender' , mapping: 'currentBM.gender.description',type:'string'   } ,
	{ name: 'currentContactType' , mapping: 'currentBM.contactType.description',type:'string'   } ,	
	{ name: 'currentRelationCode' , mapping: 'currentBM.relationCode.description',type:'string'   } ,
	{ name: 'currentForEntityCode' , mapping: 'currentBM.forEntity.code',type:'string'   } ,				
	{ name: 'currentSalutationCode' , mapping: 'currentBM.salutation.code',type:'string' }	,
	{ name: 'currentCountryCode'  , mapping: 'currentBM.country.code',type:'string' },				
	{ name: 'currentStateCode' , mapping: 'currentBM.state.code',type:'string' } ,				
	{ name: 'currentGenderCode' , mapping: 'currentBM.gender.code',type:'string'   } ,
	{ name: 'currentContactTypeCode' , mapping: 'currentBM.contactType.code',type:'string'   } ,	
	{ name: 'currentRelationCodeCode' , mapping: 'currentBM.relationCode.code',type:'string'   } ,	
	
	//Permanent Contact details
	
	{ name: 'permanentContactDetailsCode'  , mapping: 'permanentBM.contactDetailsCode',type:'int' },				
	{ name: 'permanentPersonelId' , mapping: 'permanentBM.personelId',type:'int' } ,				
	{ name: 'permanentHouseNumber' , mapping: 'permanentBM.houseNumber',type:'string'   } ,				
	{ name: 'permanentStreet' , mapping: 'permanentBM.street',type:'string' }	,			
	{ name: 'permanentCity' , mapping: 'permanentBM.city',type:'string'  },				
	{ name: 'permanentPincode', mapping: 'permanentBM.pincode',type:'string'  },
	{ name: 'permanentPhoneNumber' , mapping: 'permanentBM.phoneNumber',type:'string'  } , 
	{ name: 'permanentMobileNumber', mapping: 'permanentBM.mobileNumber',type:'string' }  ,
	{ name: 'permanentFaxNumber', mapping: 'permanentBM.faxNumber', type:'string' } ,	
	{ name: 'permanentEmail', mapping: 'permanentBM.email', type:'string' } ,	
	{ name: 'permanentStayDuration', mapping: 'permanentBM.stayDuration', type:'string' } 	,
	{ name: 'permanentFirstName' , mapping: 'permanentBM.firstName',type:'string' } ,				
	{ name: 'permanentMiddleName'  , mapping: 'permanentBM.middleName',type:'string' },				
	{ name: 'permanentLastName' , mapping: 'permanentBM.lastName',type:'string' } ,				
	{ name: 'permanentForEntity' , mapping: 'permanentBM.forEntity.description',type:'string'   } ,				
	{ name: 'permanentSalutation' , mapping: 'permanentBM.salutation.description',type:'string' }	,
	{ name: 'permanentCountry'  , mapping: 'permanentBM.country.description',type:'string' },				
	{ name: 'permanentState' , mapping: 'permanentBM.state.description',type:'string' } ,				
	{ name: 'permanentGender' , mapping: 'permanentBM.gender.description',type:'string'   } ,
	{ name: 'permanentContactType' , mapping: 'permanentBM.contactType.description',type:'string'   } ,	
	{ name: 'permanentRelationCode' , mapping: 'permanentBM.relationCode.description',type:'string'   },
	{ name: 'permanentForEntityCode' , mapping: 'permanentBM.forEntity.code',type:'string'   } ,				
	{ name: 'permanentSalutationCode' , mapping: 'permanentBM.salutation.code',type:'string' }	,
	{ name: 'permanentCountryCode'  , mapping: 'permanentBM.country.code',type:'string' },				
	{ name: 'permanentStateCode' , mapping: 'permanentBM.state.code',type:'string' } ,				
	{ name: 'permanentGenderCode' , mapping: 'permanentBM.gender.code',type:'string'   } ,
	{ name: 'permanentContactTypeCode' , mapping: 'permanentBM.contactType.code',type:'string'   } ,	
	{ name: 'permanentRelationCodeCode' , mapping: 'permanentBM.relationCode.code',type:'string'   }
	// Other Details ---- Pending				
						
	]);

	return patientRecord;
}